-- roles table
CREATE TABLE roles
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "roles_pk"
            PRIMARY KEY,
    code TEXT NOT NULL
);

CREATE UNIQUE INDEX "roles_code_uindex"
    ON roles (code);

-- users table
CREATE TABLE users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "users_pk"
            PRIMARY KEY,
    username TEXT    NOT NULL,
    password TEXT    NOT NULL,
    email    TEXT,
    role_id  INTEGER NOT NULL
        CONSTRAINT "users_roles_role_id_fk"
            REFERENCES roles
            ON DELETE CASCADE
);

CREATE UNIQUE INDEX "users_email_uindex"
    ON users (email);

CREATE INDEX "users_role_id_uindex"
    ON users (role_id);

CREATE UNIQUE INDEX "users_username_uindex"
    ON users (username);

-- employees table
CREATE TABLE employees
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "employees_pk"
            PRIMARY KEY,
    first_name  TEXT NOT NULL,
    last_name   TEXT,
    middle_name TEXT,
    birth_date  DATE,
    iin         BIGINT
);

CREATE UNIQUE INDEX "employees_iin_uindex"
    ON employees (iin);


-- rooms table
CREATE TABLE rooms
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "rooms_pk"
            PRIMARY KEY,
    code        TEXT NOT NULL,
    description TEXT
);

CREATE UNIQUE INDEX "rooms_code_uindex"
    ON rooms (code);


-- accesses table
CREATE TABLE accesses
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "accesses_pk"
            PRIMARY KEY,
    employee_id INT NOT NULL
        CONSTRAINT accesses_employees_id_fk
            REFERENCES employees
            ON UPDATE CASCADE ON DELETE CASCADE,
    room_id     INT NOT NULL
        CONSTRAINT accesses_rooms_id_fk
            REFERENCES rooms
            ON UPDATE CASCADE ON DELETE CASCADE
);