-- roles table
CREATE TABLE roles
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "roles_pk"
            PRIMARY KEY,
    code TEXT NOT NULL
);

CREATE UNIQUE INDEX "roles_code_uindex"
    ON roles (code);

--fill roles
INSERT INTO roles (id, code)
VALUES (1, 'admin'),
       (2, 'manager'),
       (3, 'guest');


-- users table
CREATE TABLE users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "users_pk"
            PRIMARY KEY,
    username TEXT    NOT NULL,
    password TEXT    NOT NULL,
    email    TEXT,
    role_id  INTEGER NOT NULL
        CONSTRAINT "users_roles_role_id_fk"
            REFERENCES roles
            ON DELETE CASCADE
);

CREATE UNIQUE INDEX "users_email_uindex"
    ON users (email);

CREATE INDEX "users_role_id_uindex"
    ON users (role_id);

CREATE UNIQUE INDEX "users_username_uindex"
    ON users (username);


-- employees table
CREATE TABLE employees
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "employees_pk"
            PRIMARY KEY,
    first_name  TEXT NOT NULL,
    last_name   TEXT,
    middle_name TEXT,
    birth_date  DATE,
    iin         BIGINT
);

CREATE UNIQUE INDEX "employees_iin_uindex"
    ON employees (iin);


-- rooms table
CREATE TABLE rooms
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "rooms_pk"
            PRIMARY KEY,
    code        TEXT NOT NULL,
    description TEXT
);

CREATE UNIQUE INDEX "rooms_code_uindex"
    ON rooms (code);


-- accesses table
CREATE TABLE accesses
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT "accesses_pk"
            PRIMARY KEY,
    employee_id INTEGER NOT NULL
        CONSTRAINT accesses_employees_id_fk
            REFERENCES employees
            ON UPDATE CASCADE ON DELETE CASCADE,
    room_id     INTEGER NOT NULL
        CONSTRAINT accesses_rooms_id_fk
            REFERENCES rooms
            ON UPDATE CASCADE ON DELETE CASCADE
);


-- device_types table
CREATE TABLE device_types
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT device_types_pk
            PRIMARY KEY,
    code        TEXT NOT NULL,
    description TEXT
);

CREATE UNIQUE INDEX device_types_id_uindex
    ON device_types (id);

--fill device_types
INSERT INTO device_types (id, code, description)
VALUES (1, 'fingerprint_scanner', 'Fingerprint scanner'),
       (2, 'climate_controller', 'Monitoring of climate');


-- devices table
CREATE TABLE devices
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT devices_pk
            PRIMARY KEY,
    code        TEXT    NOT NULL,
    type_id     INTEGER NOT NULL
        CONSTRAINT devices_device_types_id_fk
            REFERENCES device_types
            ON UPDATE CASCADE ON DELETE CASCADE,
    description TEXT,
    room_id     INTEGER
        CONSTRAINT devices_rooms_id_fk
            REFERENCES rooms
            ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE UNIQUE INDEX devices_code_uindex
    ON devices (code);


--climate table
CREATE TABLE climate_history
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT climate_history_pk
            PRIMARY KEY,
    temperature INTEGER,
    humidity    INTEGER,
    pressure    INTEGER,
    device_id   INTEGER                 NOT NULL
        CONSTRAINT climate_devices_id_fk
            REFERENCES devices
            ON UPDATE CASCADE ON DELETE CASCADE,
    room_id     INTEGER
        CONSTRAINT climate_rooms_id_fk
            REFERENCES rooms
            ON UPDATE CASCADE ON DELETE CASCADE,
    relevance   TIMESTAMP DEFAULT NOW() NOT NULL
);


-- telegram_chats
CREATE TABLE telegram_chats
(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT telegram_chats_pk
            PRIMARY KEY,
    user_id INTEGER NOT NULL
        CONSTRAINT telegram_chats_users_id_fk
            REFERENCES users
            ON UPDATE CASCADE ON DELETE CASCADE,
    chat_id BIGINT  NOT NULL
);

CREATE UNIQUE INDEX telegram_chats_chat_id_uindex
    ON telegram_chats (chat_id);

CREATE UNIQUE INDEX telegram_chats_user_id_uindex
    ON telegram_chats (user_id);


--access table
-- status: true - IN, false - OUT, null - DENIED
CREATE TABLE access_history
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY
        CONSTRAINT access_history_pk
            PRIMARY KEY,
    status      BOOLEAN,
    device_id   INTEGER                 NOT NULL
        CONSTRAINT access_history_devices_id_fk
            REFERENCES devices
            ON UPDATE CASCADE ON DELETE CASCADE,
    room_id     INTEGER
        CONSTRAINT access_history_rooms_id_fk
            REFERENCES rooms
            ON UPDATE CASCADE ON DELETE CASCADE,
    employee_id INTEGER
        CONSTRAINT access_history_employees_id_fk
            REFERENCES employees
            ON UPDATE CASCADE ON DELETE CASCADE,
    relevance   TIMESTAMP DEFAULT NOW() NOT NULL
);