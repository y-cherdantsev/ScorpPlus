@page "/employee/{EmployeeId}"
@using ScorpPlus.Models
@inject EmployeeContext EmployeeContext
@inject AccessContext AccessContext
@inject RoomContext RoomContext
@inject IndividualService IndividualService
@inject NavigationManager NavigationManager;
@using ScorpPlus.Contexts
@using Microsoft.EntityFrameworkCore
@using ScorpPlus.Dtos
@using ScorpPlus.Services
@using System.Text.RegularExpressions
@attribute [Authorize(Roles = "admin, manager")]

<div class="container">
<div class="main-body">
<div class="row gutters-sm">
<div class="col-md-4 mb-3">
    <div class="card">
        <div class="card-body">
            <div class="d-flex flex-column align-items-center text-center">
                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin" class="rounded-circle" width="150">
                <div class="mt-3">
                    @if (!_editMode)
                    {
                        <h4>@_employee.LastName @_employee.FirstName</h4>
                        <p class="text-secondary mb-1">IIN: @_employee.GetIin()</p>
                        <p class="text-muted font-size-sm">Birth Date: @_employee.GetBirthDate()</p>
                        <button class="btn btn-outline-primary" @onclick="ChangeEditMode">Edit</button>
                    }
                    else
                    {
                        <input type="text" class="form-control" placeholder="Last Name" @bind="@_employee.LastName" @oninput="@((e) => { _employee.LastName = (string) e.Value; })">
                        <br>
                        <input type="text" class="form-control" placeholder="First Name" @bind="@_employee.FirstName" @oninput="@((e) => { _employee.FirstName = (string) e.Value; })">
                        <br>
                        <input type="text" class="form-control" placeholder="Middle Name" @bind="@_employee.MiddleName" @oninput="@(e => { _employee.MiddleName = (string) e.Value; })">
                        <br>
                        <span>IIN:</span>
                        <input type="text" maxlength="12" placeholder="IIN" @bind="IinInput">

                        if (string.IsNullOrEmpty(IinInput) || new Regex("[0-9]{12}").IsMatch(IinInput))
                        {
                            <button class="btn btn-primary" @onclick="UpdateIin">Set</button>
                        }
                        else
                        {
                            <button class="btn btn-outline-primary" disabled>Set</button>
                        }

                        <br>
                        <br>
                        <span>Birth Date:</span>
                        <input type="date" @bind="@_employee.BirthDate" @oninput="@(e => { _employee.BirthDate = DateTime.Parse((string) e.Value); })" @bind:format="yyyy-MM-dd">
                        <hr>
                        <button class="btn btn-primary" @onclick="SaveEditForm">Save</button>
                        <button class="btn btn-outline-danger" @onclick="CancelEditForm">Cancel</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-md-8">
<div class="card mb-3">
<div class="card-body">
<div class="title text-center">
    <h3>RELIABILITY CHECK</h3>
</div>
@if (_employee!.Iin == null)
{
    <div class="title text-center">
        <h2 style="color: red; font-size: 14px;">To get additional data insert employees IIN</h2>
    </div>
}
@if (_employee!.Iin != null && !_checkFlag)
{
    <div class="text-center">
        <button class="btn btn-outline-primary" @onclick="ExtendedCheck">Extended check</button>
    </div>
}

@if (_employee!.Iin != null && _checkFlag)
{
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Full Name</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                <a href="https://@_individualInfoData.BasicFl.SourceLink">@_individualInfoData.BasicFl.Name</a>
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Ban leaving</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.BanLeaving)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Enforcement debt</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.EnforcementDebt)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Is terrorist</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.Terrorist)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Is pedophile</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.Pedophile)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Is alimony payer</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.AlimonyPayer)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Seized property</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.SeizedProperty)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Seized bank account</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.SeizedBankAccount)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Ban registration actions legal entity</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.BanRegistrationActionsLegalEnt)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Ban registration actions physical entity</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.BanRegistrationActionsPhysicalEnt)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Ban notarius actions</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.BanNotariusActions)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
    <hr>
    <div class="row">
        <div class="col-sm-3">
            <h6 class="mb-0">Ban seized property actions</h6>
        </div>
        <div class="col-sm-9 text-secondary">
            @if (_individualInfoData == null)
            {
                <img style="height: 12px; width: 12px" src="https://www.superiorlawncareusa.com/wp-content/uploads/2020/05/loading-gif-png-5.gif"/>
                <span> Loading data...</span>
            }
            else
            {
                if (_individualInfoData.ReliabilityFl.BanSeizedPropertyActions)
                {
                    <span style="color: red">Yes</span>
                }
                else
                {
                    <span style="color: green">No</span>
                }
            }
        </div>
    </div>
}
</div >
</div>
<div class="row gutters-sm">
    <div class="col-sm-6 mb-3">
        <div class="card h-100">
            <div class="card-body">
                <h6 class="d-flex align-items-center mb-3">
                    <a href="accessHistories/@_employee.Id">Access History:</a>
                </h6>
                @foreach (var access in _employee.AccessHistories.OrderByDescending(x => x.Relevance).Take(3))
                {
                    <small>
                        @access.Room.Code :
                        @if (access.Status!.Value)
                        {
                            <span>Entered</span>
                        }
                        else
                        {
                            <span>Exited</span>
                        }
                    </small>
                    <br>
                    <span>Time: @access.Relevance</span>
                    <hr style="margin: 0">
                }
            </div>
        </div>
    </div>
    <div class="col-sm-6 mb-3">
        <div class="card h-100">
            <div class="card-body">
                <h6 class="d-flex align-items-center mb-3">Allowed Rooms</h6>
                @foreach (var access in _employee.Accesses)
                {
                    <small>
                        @access.Room.Code
                    </small>
                    <hr style="margin: 0">
                }
                <br>@if (_employee.Accesses.Count != RoomContext.Rooms.Count())
                    {
                        <div class="row">
                            <div class="col-10">
                                <select class="form-control form-select-sm" id="selectAccess" @onchange="ChangeAddAccessValue">

                                    @foreach (var room in RoomContext.Rooms.ToList().Where(x => _employee.Accesses.All(y => y.Room.Id != x.Id)).ToList())
                                    {
                                    <option value="@room.Id">@room.Code</option>
                                    }

                                </select>
                            </div>
                            <div class="col-2">
                                <button class="btn btn-primary btn-sm" @onclick="AddAccess">Add</button>
                            </div>
                        </div>
                    }
            </div>
        </div>
    </div>
</div>
</div>
</div>
</div>
</div>


<style>
  .card {
      box-shadow: 0 1px 3px 0 rgba(0,0,0,.1), 0 1px 2px 0 rgba(0,0,0,.06);
  }
  
  .card {
      position: relative;
      display: flex;
      flex-direction: column;
      min-width: 0;
      word-wrap: break-word;
      background-color: #fff;
      background-clip: border-box;
      border: 0 solid rgba(0,0,0,.125);
      border-radius: .25rem;
  }
  
  .card-body {
      flex: 1 1 auto;
      min-height: 1px;
      padding: 1rem;
  }
  
  .gutters-sm {
      margin-right: -8px;
      margin-left: -8px;
  }
  
  .gutters-sm>.col, .gutters-sm>[class*=col-] {
      padding-right: 8px;
      padding-left: 8px;
  }
  .mb-3, .my-3 {
      margin-bottom: 1rem!important;
  }
  
  .bg-gray-300 {
      background-color: #e2e8f0;
  }
  .h-100 {
      height: 100%!important;
  }
  .shadow-none {
      box-shadow: none!important;
  }
</style>

@code {
    Employee _employee;
    IndividualInfoData _individualInfoData;
    bool _checkFlag;
    bool _editMode;
    private int? AddAccessSelectorValue { get; set; } = null;

    private string IinInput { get; set; }

    [Parameter]
    public string EmployeeId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _employee = EmployeeContext.Employees
            .Include(x => x.Accesses)
            .Include(x => x.Accesses).ThenInclude(x => x.Room)
            .Include(x => x.AccessHistories).ThenInclude(x => x.Room)
            .ToList()
            .FirstOrDefault(x => x.Id == int.Parse(EmployeeId));
        IinInput = string.IsNullOrEmpty(_employee!.GetIin()) ? null : _employee.GetIin();
        AddAccessSelectorValue =_employee.Accesses.Count != RoomContext.Rooms.Count() ? RoomContext.Rooms.ToList().Where(x => _employee.Accesses.All(y => y.Room.Id != x.Id)).ToList().First().Id : (int?) null;
    }

    private async Task ExtendedCheck()
    {
        _checkFlag = true;
        if (_employee!.Iin != null)
            _individualInfoData = await IndividualService.GetIndividualData((long) _employee.Iin);
    }

    private async Task UpdateIin()
    {
        if (!string.IsNullOrEmpty(IinInput) && new Regex("[0-9]{12}").IsMatch(IinInput))
            _employee.Iin = long.Parse(IinInput);
        else _employee.Iin = null;
    }

    private async Task ChangeEditMode()
    {
        IinInput = string.IsNullOrEmpty(_employee!.GetIin()) ? null : _employee.GetIin();
        _editMode = !_editMode;
    }

    private async Task SaveEditForm()
    {
        EmployeeContext.Employees.Update(_employee);
        await EmployeeContext.SaveChangesAsync();
        await ChangeEditMode();
    }

    private async Task CancelEditForm()
    {
        await EmployeeContext.Entry(_employee).ReloadAsync();
        await ChangeEditMode();
    }

    private async Task ChangeAddAccessValue(ChangeEventArgs e)
    {
        AddAccessSelectorValue = int.Parse((string) e.Value);
    }

    private async Task AddAccess()
    {
        if(AddAccessSelectorValue == null) return;
        await AccessContext.Accesses.AddAsync(new Access
        {
            EmployeeId = _employee.Id,
            RoomId = AddAccessSelectorValue.Value
        });
        await AccessContext.SaveChangesAsync();
        NavigationManager.NavigateTo($"employee/{_employee.Id}", forceLoad: true);
    }

}